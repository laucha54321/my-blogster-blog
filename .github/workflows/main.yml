name: Deploy to Dist Repository

on:
  push:
    branches: [ main ]

permissions:
  contents: read  # for checkout

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Astro site (no minification)
        run: npm run build
        # Astro builds without minification by default in your case

      - name: Install and run HTML minifier
        run: |
          # Install html-minifier globally
          npm install -g html-minifier
          
          echo "Minifying HTML files..."
          find dist -name "*.html" -exec html-minifier \
            --collapse-whitespace \
            --remove-comments \
            --remove-optional-tags \
            --remove-redundant-attributes \
            --remove-script-type-attributes \
            --remove-tag-whitespace \
            --use-short-doctype \
            --minify-css true \
            --minify-js true \
            --case-sensitive \
            --decode-entities \
            --sort-attributes \
            --sort-class-name \
            -o {} {} \;
          
          echo "HTML minification complete!"
          echo "Minified files:"
          find dist -name "*.html" -exec echo "  - {}" \;

      - name: Clone dist repo with PAT
        env:
          DIST_REPO_TOKEN: ${{ secrets.DIST_REPO_TOKEN }}
        run: |
          # Change TARGET_BRANCH to 'master' if your dist repo uses master
          TARGET_BRANCH=master
          git clone --branch "$TARGET_BRANCH" \
            "https://x-access-token:${DIST_REPO_TOKEN}@github.com/laucha54321/distributables-blog.git" \
            distributables-blog

      - name: Copy build into dist repo
        run: |
          cd distributables-blog

          # Remove everything except the .git directory
          find . -mindepth 1 -maxdepth 1 ! -name ".git" -exec rm -rf {} +

          # Copy new build (now minified)
          cp -r ../dist/. .

          # Commit if there are changes
          git add .
          git -c user.name="GitHub Actions" -c user.email="actions@github.com" \
            commit -m "Deploy: Update from source repo ${GITHUB_SHA}" || echo "No changes to commit"

      - name: Push to dist repo
        env:
          DIST_REPO_TOKEN: ${{ secrets.DIST_REPO_TOKEN }}
        run: |
          cd distributables-blog
          # Push current HEAD to the same branch we cloned
          git push origin HEAD
